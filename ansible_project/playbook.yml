---
- name: Install packets to master node
  hosts: all
  become: yes
  tasks:
    - name: Update and upgrade packets
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400
        
    - name:  Add Kernel Parameters
      shell: 
        cmd: | 
          tee /etc/modules-load.d/containerd.conf <<EOF
          overlay
          br_netfilter
          EOF
          modprobe overlay
          modprobe br_netfilter
          tee /etc/sysctl.d/kubernetes.conf <<EOF
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          EOF
          sysctl --system

    - name: Install required system packages
      apt: 
        pkg:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: latest
        update_cache: yes

    - name: Add Docker GPG apt Key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
     
      

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install containerd.io
      apt:
        name: containerd.io
        state: latest
        update_cache: true

    - name: containerd to start using systemd as cgroup
      shell:
        cmd: |
          containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
          sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml  

    - name: Restart containerd service
      service:
        name: containerd
        state: restarted
        enabled: yes
    
    - name: Get Kubernetes packege key
      shell:  curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key |  gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    
    - name: Add Kubernetes repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        filename: kubernetes
    
    - name: Install kubelet kubeadm kubectl
      apt:
        pkg:
          - kubelet
          - kubeadm
          - kubectl
        state: latest
        update_cache: yes

    - name: Prevent kubernetes being upgraded
      shell: apt-mark hold kubelet kubeadm kubectl
  

    - name: Restart kubelet service
      service:
        name: containerd
        state: restarted
        enabled: yes    



- name: Initialize Kubernetes master
  hosts: master
  become: yes
  tasks:
    - name: Initialize Kubernetes master
      command: kubeadm init 
      register: init_output
      ignore_errors: yes
      

    - name: Create .kube directory
      become:
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        mode: '0644'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        remote_src: true
        

    - name: Apply Flannel network plugin
      command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
      become: false


    - name: Get join command
      shell: kubeadm token create --print-join-command
      register: join_command
      ignore_errors: yes

    - name: Copy join command to local file.
      become: false
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
      


- name: Join workers nodes to cluster
  hosts: workers
  tasks:
   - name: Copy join command from Ansiblehost to the worker nodes.
     copy:
       src: /tmp/kubernetes_join_command
       dest: /tmp/kubernetes_join_command
       mode: 0777

   - name: Join the Worker nodes to the cluster.
     become: yes
     command: sh /tmp/kubernetes_join_command
     register: joined_or_not




